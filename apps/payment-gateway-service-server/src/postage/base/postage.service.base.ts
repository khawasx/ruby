/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Postage as PrismaPostage } from "@prisma/client";

export class PostageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PostageCountArgs, "select">): Promise<number> {
    return this.prisma.postage.count(args);
  }

  async postages(args: Prisma.PostageFindManyArgs): Promise<PrismaPostage[]> {
    return this.prisma.postage.findMany(args);
  }
  async postage(
    args: Prisma.PostageFindUniqueArgs
  ): Promise<PrismaPostage | null> {
    return this.prisma.postage.findUnique(args);
  }
  async createPostage(args: Prisma.PostageCreateArgs): Promise<PrismaPostage> {
    return this.prisma.postage.create(args);
  }
  async updatePostage(args: Prisma.PostageUpdateArgs): Promise<PrismaPostage> {
    return this.prisma.postage.update(args);
  }
  async deletePostage(args: Prisma.PostageDeleteArgs): Promise<PrismaPostage> {
    return this.prisma.postage.delete(args);
  }
}
