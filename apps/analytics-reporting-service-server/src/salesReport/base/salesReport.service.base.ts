/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SalesReport as PrismaSalesReport } from "@prisma/client";

export class SalesReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesReport.count(args);
  }

  async salesReports(
    args: Prisma.SalesReportFindManyArgs
  ): Promise<PrismaSalesReport[]> {
    return this.prisma.salesReport.findMany(args);
  }
  async salesReport(
    args: Prisma.SalesReportFindUniqueArgs
  ): Promise<PrismaSalesReport | null> {
    return this.prisma.salesReport.findUnique(args);
  }
  async createSalesReport(
    args: Prisma.SalesReportCreateArgs
  ): Promise<PrismaSalesReport> {
    return this.prisma.salesReport.create(args);
  }
  async updateSalesReport(
    args: Prisma.SalesReportUpdateArgs
  ): Promise<PrismaSalesReport> {
    return this.prisma.salesReport.update(args);
  }
  async deleteSalesReport(
    args: Prisma.SalesReportDeleteArgs
  ): Promise<PrismaSalesReport> {
    return this.prisma.salesReport.delete(args);
  }
}
