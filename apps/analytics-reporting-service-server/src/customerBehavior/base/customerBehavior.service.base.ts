/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CustomerBehavior as PrismaCustomerBehavior,
} from "@prisma/client";

export class CustomerBehaviorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomerBehaviorCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customerBehavior.count(args);
  }

  async customerBehaviors(
    args: Prisma.CustomerBehaviorFindManyArgs
  ): Promise<PrismaCustomerBehavior[]> {
    return this.prisma.customerBehavior.findMany(args);
  }
  async customerBehavior(
    args: Prisma.CustomerBehaviorFindUniqueArgs
  ): Promise<PrismaCustomerBehavior | null> {
    return this.prisma.customerBehavior.findUnique(args);
  }
  async createCustomerBehavior(
    args: Prisma.CustomerBehaviorCreateArgs
  ): Promise<PrismaCustomerBehavior> {
    return this.prisma.customerBehavior.create(args);
  }
  async updateCustomerBehavior(
    args: Prisma.CustomerBehaviorUpdateArgs
  ): Promise<PrismaCustomerBehavior> {
    return this.prisma.customerBehavior.update(args);
  }
  async deleteCustomerBehavior(
    args: Prisma.CustomerBehaviorDeleteArgs
  ): Promise<PrismaCustomerBehavior> {
    return this.prisma.customerBehavior.delete(args);
  }
}
