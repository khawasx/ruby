/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Merchant as PrismaMerchant } from "@prisma/client";

export class MerchantServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MerchantCountArgs, "select">): Promise<number> {
    return this.prisma.merchant.count(args);
  }

  async merchants(
    args: Prisma.MerchantFindManyArgs
  ): Promise<PrismaMerchant[]> {
    return this.prisma.merchant.findMany(args);
  }
  async merchant(
    args: Prisma.MerchantFindUniqueArgs
  ): Promise<PrismaMerchant | null> {
    return this.prisma.merchant.findUnique(args);
  }
  async createMerchant(
    args: Prisma.MerchantCreateArgs
  ): Promise<PrismaMerchant> {
    return this.prisma.merchant.create(args);
  }
  async updateMerchant(
    args: Prisma.MerchantUpdateArgs
  ): Promise<PrismaMerchant> {
    return this.prisma.merchant.update(args);
  }
  async deleteMerchant(
    args: Prisma.MerchantDeleteArgs
  ): Promise<PrismaMerchant> {
    return this.prisma.merchant.delete(args);
  }
}
