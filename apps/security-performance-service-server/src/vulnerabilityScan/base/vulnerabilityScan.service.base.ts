/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  VulnerabilityScan as PrismaVulnerabilityScan,
} from "@prisma/client";

export class VulnerabilityScanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VulnerabilityScanCountArgs, "select">
  ): Promise<number> {
    return this.prisma.vulnerabilityScan.count(args);
  }

  async vulnerabilityScans(
    args: Prisma.VulnerabilityScanFindManyArgs
  ): Promise<PrismaVulnerabilityScan[]> {
    return this.prisma.vulnerabilityScan.findMany(args);
  }
  async vulnerabilityScan(
    args: Prisma.VulnerabilityScanFindUniqueArgs
  ): Promise<PrismaVulnerabilityScan | null> {
    return this.prisma.vulnerabilityScan.findUnique(args);
  }
  async createVulnerabilityScan(
    args: Prisma.VulnerabilityScanCreateArgs
  ): Promise<PrismaVulnerabilityScan> {
    return this.prisma.vulnerabilityScan.create(args);
  }
  async updateVulnerabilityScan(
    args: Prisma.VulnerabilityScanUpdateArgs
  ): Promise<PrismaVulnerabilityScan> {
    return this.prisma.vulnerabilityScan.update(args);
  }
  async deleteVulnerabilityScan(
    args: Prisma.VulnerabilityScanDeleteArgs
  ): Promise<PrismaVulnerabilityScan> {
    return this.prisma.vulnerabilityScan.delete(args);
  }
}
