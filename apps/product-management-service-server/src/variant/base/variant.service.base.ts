/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Variant as PrismaVariant } from "@prisma/client";

export class VariantServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VariantCountArgs, "select">): Promise<number> {
    return this.prisma.variant.count(args);
  }

  async variants(args: Prisma.VariantFindManyArgs): Promise<PrismaVariant[]> {
    return this.prisma.variant.findMany(args);
  }
  async variant(
    args: Prisma.VariantFindUniqueArgs
  ): Promise<PrismaVariant | null> {
    return this.prisma.variant.findUnique(args);
  }
  async createVariant(args: Prisma.VariantCreateArgs): Promise<PrismaVariant> {
    return this.prisma.variant.create(args);
  }
  async updateVariant(args: Prisma.VariantUpdateArgs): Promise<PrismaVariant> {
    return this.prisma.variant.update(args);
  }
  async deleteVariant(args: Prisma.VariantDeleteArgs): Promise<PrismaVariant> {
    return this.prisma.variant.delete(args);
  }
}
